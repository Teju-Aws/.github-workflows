name: Build and Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: myapp
  IMAGE_TAG: latest
  CONTAINER_NAME: myapp
  HOST_PORT: 3000
  CONTAINER_PORT: 3000

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ‚úÖ Checkout repository
        uses: actions/checkout@v3

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîß Build Docker image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: üóú Save Docker image to tar
        run: |
          docker save $IMAGE_NAME:$IMAGE_TAG -o $IMAGE_NAME.tar

      - name: üöÄ Transfer Docker image to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "${{ env.IMAGE_NAME }}.tar"
          target: "/home/ec2-user/"

      - name: üñ• Load and run container on EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            set -e
            CONTAINER="${{ env.CONTAINER_NAME }}"
            HOST_PORT=${{ env.HOST_PORT }}
            CONTAINER_PORT=${{ env.CONTAINER_PORT }}
            IMAGE_PATH="/home/ec2-user/${{ env.IMAGE_NAME }}.tar"

            echo "Checking tar file..."
            ls -lh $IMAGE_PATH

            echo "Loading Docker image..."
            sudo docker load -i $IMAGE_PATH

            echo "Removing tar file..."
            rm -f $IMAGE_PATH

            echo "Stopping old container (if any)..."
            sudo docker stop $CONTAINER || true
            sudo docker rm $CONTAINER || true

            echo "Starting new container..."
            sudo docker run -d --restart always \
              --name $CONTAINER \
              -p $HOST_PORT:$CONTAINER_PORT \
              ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

            echo "‚úÖ Deployment complete!"

      - name: ‚úÖ Verify container is running
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "Checking running containers..."
            sudo docker ps --filter "name=${{ env.CONTAINER_NAME }}" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
